{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-01-07T00:56:32.235578+00:00",
  "repo": "lamps-wg/cms-ml-dsa",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDONFRYgM6brDDb",
      "title": "Specify SHA2 as the hash function rather than SHAKE",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/1",
      "state": "CLOSED",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://mailarchive.ietf.org/arch/msg/spasm/aWaBnRcrYGlDHTxqj9u72QEPm-E/\r\n\r\nIf we keep actual digestAlgorithms (not id-digest-none) for non-SignedAttributes, add similar text as RFC 8419 to make it explicit that a prehash isn't generated. And in this case we set the digestAlgorithm as whatever digest is used internally to ML-DSA.\r\n\r\n```\r\nWhen signing with Ed448, the\r\ndigestAlgorithm MUST be id-shake256, and the algorithm parameters\r\nfield MUST be absent.\r\n\r\n  NOTE: Either id-sha512 or id-shake256 is used as part to the\r\n  private key signing operation.  However, the private key signing\r\n  operation does not take a message digest computed with one of\r\n  these algorithms as an input.\r\n```",
      "createdAt": "2024-10-24T14:18:49Z",
      "updatedAt": "2024-11-12T14:32:36Z",
      "closedAt": "2024-11-12T14:32:35Z",
      "comments": [
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "Something like id-digest-none (id-hashIdentity) was proposed for draft-ietf-curdle-cms-eddsa-signatures (RFC 8419).  There wasn't much discussion, the decision was to avoid the extra identifier: https://mailarchive.ietf.org/arch/msg/curdle/HG4ED83kc2mf9n4j-O_zL3PGGKg/\r\n\r\n",
          "createdAt": "2024-10-28T15:03:54Z",
          "updatedAt": "2024-10-28T15:03:54Z"
        },
        {
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "body": "For ML-DSA-44 we've also got a choice of whether to specify SHA-512 or SHA-256. [FIPS 204](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.204.pdf) describes SHA256 and SHA512 as examples of valid pre-hash algorithms (as well as SHAKE128), but the [NIST OID assignments for pre-hash ML-DSA](https://csrc.nist.gov/projects/computer-security-objects-register/algorithm-registration) only include SHA512, which would imply a preference on NIST's part for SHA512 as a pre-hash algorithm for all ML-DSA variants.",
          "createdAt": "2024-11-04T16:58:18Z",
          "updatedAt": "2024-11-04T16:58:18Z"
        },
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "My question to the list, linked in the issue description, asked if we should just use SHA512.  The only response to this was from Deirde in favour of that: https://mailarchive.ietf.org/arch/msg/spasm/tFMKlZMjDI9npKugf6_Mg23_01o/\r\nSo let's do that.",
          "createdAt": "2024-11-08T13:56:36Z",
          "updatedAt": "2024-11-08T13:56:36Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDONFRYgM6brDY_",
      "title": "To use context string or not to use context string?",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/2",
      "state": "OPEN",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://mailarchive.ietf.org/arch/msg/spasm/aWaBnRcrYGlDHTxqj9u72QEPm-E/",
      "createdAt": "2024-10-24T14:19:24Z",
      "updatedAt": "2024-10-24T14:19:24Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDONFRYgM6brDqu",
      "title": "Update FIPS 204 reference to DOI.10.6028/NIST.FIPS.204",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/3",
      "state": "CLOSED",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Update FIPS 204 reference to DOI.10.6028/NIST.FIPS.204",
      "createdAt": "2024-10-24T14:19:51Z",
      "updatedAt": "2024-11-14T23:22:37Z",
      "closedAt": "2024-11-14T23:22:37Z",
      "comments": [
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #6 ",
          "createdAt": "2024-11-14T23:22:37Z",
          "updatedAt": "2024-11-14T23:22:37Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDONFRYgM6brD7N",
      "title": "Should the digest algorithms be bumped from RECOMMENDED to REQUIRED?",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/4",
      "state": "CLOSED",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "danvangeest"
      ],
      "labels": [],
      "body": "Should the digest algorithms be bumped from RECOMMENDED to REQUIRED? This guarantees a minimum level of interoperability.\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/spasm/yM8kS1kCoizWCMjS8pdcV3IFaDg/",
      "createdAt": "2024-10-24T14:20:17Z",
      "updatedAt": "2024-11-14T23:23:11Z",
      "closedAt": "2024-11-14T23:23:11Z",
      "comments": [
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "This is the text from draft-ietf-lamps-cms-sphincs-plus, do something similar.\r\n\r\n>The digestAlgorithm MUST identify a one-way hash function.  To\r\nensure collision resistance, the identified hash function SHOULD\r\nproduce a hash value that is at least twice the size of the hash\r\nfunction used in the SLH-DSA tree.  The hash functions defined in\r\n[FIPS180] and [FIPS202] MUST be supported for use with the\r\nvariants of SLH-DSA as shown below; however, other hash functions\r\nMAY also be supported:",
          "createdAt": "2024-11-08T13:05:53Z",
          "updatedAt": "2024-11-08T13:05:53Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDONFRYgM6brFUq",
      "title": "Can we address UEF-CMA issues?",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/5",
      "state": "OPEN",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See whole thread: https://mailarchive.ietf.org/arch/msg/spasm/yM8kS1kCoizWCMjS8pdcV3IFaDg/ and https://mailarchive.ietf.org/arch/msg/spasm/uAwmfFDCP2gAggqYSu4ykRCk4mU/\r\n\r\nPossible solutions:\r\n\r\n- (pure) ML-DSA for SignedArtifacts, HashML-DSA for non-signed artifacts.\r\n- Use context string, \"CMW-with-SignedAttributes\" and \"CMS-without-SignedAttributes\" (see also #2 ).\r\n- ML-DSA MUST be used with SignedAttributes.",
      "createdAt": "2024-10-24T14:22:36Z",
      "updatedAt": "2024-11-14T13:32:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed in https://github.com/lamps-wg/cms-ml-dsa/pull/6#discussion_r1838288342, if we don't address the issue directly in the draft (as is looking likely), it could be mentioned in the Security Considerations alongside any interim mitigations prior to the issue being addressed for CMS more generally.",
          "createdAt": "2024-11-14T13:32:11Z",
          "updatedAt": "2024-11-14T13:32:11Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDONFRYgM6eGwvw",
      "title": "SHA-512 reference",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/8",
      "state": "CLOSED",
      "author": "adam-r-ncsc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC 8017 is used as a reference for SHA-512 as a message digest algorithm - I'd have expected RFC 5754.",
      "createdAt": "2024-11-12T15:41:15Z",
      "updatedAt": "2024-11-14T23:24:18Z",
      "closedAt": "2024-11-14T23:24:18Z",
      "comments": [
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "This is a good point.  This came from text copied from the cms-sphincs-plus draft.  I can update our draft.  Would you like to bring this up on the list and/or direct to Russ for cms-sphincs-plus?  If not, I can.",
          "createdAt": "2024-11-12T16:22:42Z",
          "updatedAt": "2024-11-12T16:22:42Z"
        },
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "On the other hand, RFC 8017 is the update of RFC 3447 which brought id-sha512 into the IETF, so maybe RFC 8017 is appropriate.  RFC 5754 brought it into CMS though.",
          "createdAt": "2024-11-12T16:38:31Z",
          "updatedAt": "2024-11-12T16:38:31Z"
        },
        {
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "body": "Seems a bit trivial for the list so long as cms-sphincs-plus and this draft are aligned - I'll email Russ directly. ",
          "createdAt": "2024-11-14T12:59:51Z",
          "updatedAt": "2024-11-14T12:59:51Z"
        },
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with a commit fa06e8",
          "createdAt": "2024-11-14T23:24:18Z",
          "updatedAt": "2024-11-14T23:24:18Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDONFRYgM6fshNw",
      "title": "Size constraints for ML-DSA-PublicKey and ML-DSA-PrivateKey",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/10",
      "state": "CLOSED",
      "author": "adam-r-ncsc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See this thread:\r\nhttps://mailarchive.ietf.org/arch/msg/spasm/2ptHLgPTksX7CNNNQr21pxO-zw8/\r\n\r\n`ML-DSA-PublicKey ::= OCTET STRING` would become `ML-DSA-PublicKey ::= OCTET STRING (SIZE (1312..2592))`, assuming I've read FIPS 204 right.\r\n\r\n`ML-DSA-PrivateKey ::= OCTET STRING` would become `ML-DSA-PrivateKey ::= OCTET STRING (SIZE (32))`, assuming we're only supporting seeds as private keys.",
      "createdAt": "2024-11-21T12:08:26Z",
      "updatedAt": "2024-11-22T09:46:25Z",
      "closedAt": "2024-11-22T09:46:25Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDONFRYgM6fslQN",
      "title": "Other security considerations",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/11",
      "state": "CLOSED",
      "author": "adam-r-ncsc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "draft-ietf-lamps-dilithium-certificates takes care of much of this for us - is there anything else that needs adding?\r\n\r\nSome suggestions:\r\n\r\n- Implementations need to use a decent PRNG for key generation and rnd (if using hedged signatures).\r\n- Some other drafts discuss protection against fault attacks - FIPS 204 calls out hedged signatures as a particular defence against this.",
      "createdAt": "2024-11-21T12:15:39Z",
      "updatedAt": "2024-11-21T23:26:45Z",
      "closedAt": "2024-11-21T23:26:45Z",
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDONFRYgM6fsp3U",
      "title": "Example encodings",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/issues/12",
      "state": "OPEN",
      "author": "adam-r-ncsc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "draft-ietf-lamps-dilithium-certificates has example private keys and public keys. It also has a TODO for example certificates.\r\n\r\nWe could add example signed-data encodings. That being said, RFC 8419, draft-ietf-lamps-cms-sphincs-plus and even RFC 5652 don't have any, so it doesn't need to hold the draft back.\r\n\r\nIf we do include them, it would make sense to include signed attribute and non-signed attribute cases, and to show all three ML-DSA parameter sets. Re-using the keys and (eventually) certificates from draft-ietf-lamps-dilithium-certificates might be sensible too, if possible.",
      "createdAt": "2024-11-21T12:23:59Z",
      "updatedAt": "2024-11-21T12:24:00Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 6,
      "id": "PR_kwDONFRYgM6AP3KA",
      "title": "Mostly public key encoding stuff, plus some cleanup.",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/pull/6",
      "state": "MERGED",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-29T13:53:18Z",
      "updatedAt": "2024-11-14T15:37:45Z",
      "baseRepository": "lamps-wg/cms-ml-dsa",
      "baseRefName": "main",
      "baseRefOid": "6955afcfb0299ba70ff1288f09296c31142b1ad9",
      "headRepository": "lamps-wg/cms-ml-dsa",
      "headRefName": "dvg/my_original_review",
      "headRefOid": "19671f4a4d984dce2511d2fdd2555772576fac53",
      "closedAt": "2024-11-14T15:35:07Z",
      "mergedAt": "2024-11-14T15:35:06Z",
      "mergedBy": "danvangeest",
      "mergeCommit": {
        "oid": "36e356be24c1592f102c6c72ee956e1df31f7c86"
      },
      "comments": [
        {
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "body": "Requesting approval so I can merge, if there are no other comments and I didn't miss anything.",
          "createdAt": "2024-11-14T13:45:22Z",
          "updatedAt": "2024-11-14T13:45:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDONFRYgM6Qkb_z",
          "commit": {
            "abbreviatedOid": "73d0089"
          },
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Comments for other reviewers.",
          "createdAt": "2024-11-09T16:13:10Z",
          "updatedAt": "2024-11-09T16:16:14Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "ietf-lamps-dilithium-certificates refers to use for public key encoding and ANS.1, so I added more text.",
              "createdAt": "2024-11-09T16:13:11Z",
              "updatedAt": "2024-11-09T16:16:14Z"
            },
            {
              "originalPosition": 128,
              "body": "I removed this line because it's not in the other PQ documents, and if it's ever added in the future this makes that easier maybe?",
              "createdAt": "2024-11-09T16:14:15Z",
              "updatedAt": "2024-11-09T16:16:14Z"
            },
            {
              "originalPosition": 137,
              "body": "I think no, at least to align with cms-sphincs-plus. The CMS-EUF-CMA work can address this.  If that determines we need more text here and in cms-sphincs-plus we can do that then.",
              "createdAt": "2024-11-09T16:15:40Z",
              "updatedAt": "2024-11-09T16:16:14Z"
            },
            {
              "originalPosition": 148,
              "body": "see previous comment",
              "createdAt": "2024-11-09T16:15:50Z",
              "updatedAt": "2024-11-09T16:16:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONFRYgM6QyKWs",
          "commit": {
            "abbreviatedOid": "73d0089"
          },
          "author": "BenS-3",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-12T09:39:10Z",
          "updatedAt": "2024-11-12T09:56:13Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "IIRC idnits has previously complained when we included a reference in the abstract, although I note that it isn't complaining currently. Not sure what's different in this case",
              "createdAt": "2024-11-12T09:39:10Z",
              "updatedAt": "2024-11-12T09:56:13Z"
            },
            {
              "originalPosition": 41,
              "body": "s/keys sizes/key sizes/",
              "createdAt": "2024-11-12T09:40:34Z",
              "updatedAt": "2024-11-12T09:56:13Z"
            },
            {
              "originalPosition": 137,
              "body": "I know the WG wanted a quick turnaround on this draft - are we expecting it to wait on the CMS-EUF-CMA work (the interim for which will likely be in the new year)?",
              "createdAt": "2024-11-12T09:55:55Z",
              "updatedAt": "2024-11-12T09:56:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONFRYgM6Q0trj",
          "commit": {
            "abbreviatedOid": "73d0089"
          },
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-12T14:19:33Z",
          "updatedAt": "2024-11-12T14:19:33Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "I will post a summary of the EUF-CMA mitigations to the list since the presentation was cut short.  Hopefully responses to that will give an indication of where the WG wants to go from there.\r\n\r\ncms-sphincs-plus has gone through WGLC, so I don't think the EUF-CMA stuff would prevent this draft from doing the same.  If the WG determines that the EUF-CMA issue needs to be solved immediately, both drafts would need to be updated.  But there is a more general EUF-CMA solution that also allows these drafts to proceed now.",
              "createdAt": "2024-11-12T14:19:33Z",
              "updatedAt": "2024-11-12T14:19:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONFRYgM6Q0zCd",
          "commit": {
            "abbreviatedOid": "73d0089"
          },
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-12T14:26:59Z",
          "updatedAt": "2024-11-12T14:26:59Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "https://ietf.github.io/id-guidelines/ still says to avoid citations in the abstract so I'll remove it.",
              "createdAt": "2024-11-12T14:26:59Z",
              "updatedAt": "2024-11-12T14:26:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONFRYgM6Q1XM8",
          "commit": {
            "abbreviatedOid": "c827c12"
          },
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-12T15:18:05Z",
          "updatedAt": "2024-11-12T15:31:05Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "Makes sense to me. There are mitigations that can be applied in the interim for the EUF-CMA issue (e.g. only accepting one of signed attributes/no signed attributes, not both), so it's not like implementers have no options if they're worried about it prior to a separate RFC addressing the problem.\r\n\r\nI'm happy with the text you've suggested - it could be worth noting the issue in the Security Considerations perhaps, and that future CMS RFCs may address this. On the other hand, I guess it's not an issue that's specific to ML-DSA.\r\n",
              "createdAt": "2024-11-12T15:18:05Z",
              "updatedAt": "2024-11-12T15:31:05Z"
            },
            {
              "originalPosition": 107,
              "body": "\"octet string\" versus \"OCTET STRING\" might be a bit confusing - FIPS 204 describes the output of Algorithm 22 as a byte string, so that could be an alternative. Alternatively, something like \"the subjectPublicKey BIT STRING contains the raw octet string encoding of the public key, i.e. without any additional ASN.1 wrapping\". I do think it makes sense as currently written, it just took me a second read to check that the lack of capital letters was deliberate.",
              "createdAt": "2024-11-12T15:25:11Z",
              "updatedAt": "2024-11-12T15:31:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONFRYgM6Q1zgy",
          "commit": {
            "abbreviatedOid": "56de0a0"
          },
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-12T15:59:50Z",
          "updatedAt": "2024-11-12T16:00:07Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nAlgorithm 22 in Section 7.2 of {{FIPS204}} defines the raw byte string encoding of an ML-DSA public key.\r\n```",
              "createdAt": "2024-11-12T15:59:51Z",
              "updatedAt": "2024-11-12T16:00:07Z"
            },
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nWhen used in a SubjectPublicKeyInfo type, the subjectPublicKey BIT STRING contains the raw byte string encoding of the public key.\r\n```",
              "createdAt": "2024-11-12T16:00:01Z",
              "updatedAt": "2024-11-12T16:00:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONFRYgM6RNGzZ",
          "commit": {
            "abbreviatedOid": "19671f4"
          },
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-14T13:46:59Z",
          "updatedAt": "2024-11-14T13:46:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDONFRYgM6BZZnL",
      "title": "Digest algorithm cleanup",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/pull/7",
      "state": "MERGED",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #1 and #4.",
      "createdAt": "2024-11-09T13:02:14Z",
      "updatedAt": "2024-11-14T13:37:32Z",
      "baseRepository": "lamps-wg/cms-ml-dsa",
      "baseRefName": "main",
      "baseRefOid": "a4d5d77f754b7d2ada8d517967268ad5694f90fa",
      "headRepository": "lamps-wg/cms-ml-dsa",
      "headRefName": "dvg/digest_alg_text",
      "headRefOid": "4aeff6c633b08cb69b112aec23fff2995714f53e",
      "closedAt": "2024-11-12T14:32:34Z",
      "mergedAt": "2024-11-12T14:32:34Z",
      "mergedBy": "danvangeest",
      "mergeCommit": {
        "oid": "6955afcfb0299ba70ff1288f09296c31142b1ad9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONFRYgM6Qyd43",
          "commit": {
            "abbreviatedOid": "4aeff6c"
          },
          "author": "BenS-3",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-12T10:10:54Z",
          "updatedAt": "2024-11-12T10:10:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDONFRYgM6CptkT",
      "title": "Adam's comments",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/pull/9",
      "state": "MERGED",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-21T11:11:07Z",
      "updatedAt": "2024-11-21T15:30:45Z",
      "baseRepository": "lamps-wg/cms-ml-dsa",
      "baseRefName": "main",
      "baseRefOid": "fa06e80b47f1d4785d42066bdd4cefccff435b0b",
      "headRepository": "lamps-wg/cms-ml-dsa",
      "headRefName": "dvg/adams_comments",
      "headRefOid": "533b24056ff4261b25b1705d39ff0639e4b7cddc",
      "closedAt": "2024-11-21T13:59:47Z",
      "mergedAt": "2024-11-21T13:59:47Z",
      "mergedBy": "danvangeest",
      "mergeCommit": {
        "oid": "e5f708e8b91b4eec996a6ca46e09e92e7a9516f7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONFRYgM6SGTSE",
          "commit": {
            "abbreviatedOid": "ac5abda"
          },
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I suggested some extra text for the digestAlgorithm bit, but the rest of the changes all look good to me.",
          "createdAt": "2024-11-21T11:43:36Z",
          "updatedAt": "2024-11-21T11:46:51Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nSHA-512 {{FIPS180}} MUST be supported for use with the variants of SLH-DSA in this document; however, other hash functions MAY also be supported.  When SHA-512 is used, the id-sha512 {{!RFC5754}} digest algorithm identifier is used and the parameters field MUST be omitted. When signing using ML-DSA without including signed attributes, the algorithm specified in the digestAlgorithm field has no meaning, as ML-DSA computes signatures over entire messages rather than externally computed digests. Nonetheless, it SHOULD specify a digest algorithm that otherwise would have been used if signed attributes were present, such as SHA-512. When processing a SignerInfo signed using ML-DSA, if no signed attributes are present, implementatons MUST ignore the content of the digestAlgorithm field.\r\n```",
              "createdAt": "2024-11-21T11:43:36Z",
              "updatedAt": "2024-11-21T11:46:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONFRYgM6SGuvI",
          "commit": {
            "abbreviatedOid": "533b240"
          },
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-21T12:32:14Z",
          "updatedAt": "2024-11-21T12:32:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDONFRYgM6CsCU9",
      "title": "Add size parameters to ASN.1 public and private key OCTET STRINGs",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/pull/13",
      "state": "MERGED",
      "author": "danvangeest",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #10",
      "createdAt": "2024-11-21T15:30:27Z",
      "updatedAt": "2024-11-22T09:46:24Z",
      "baseRepository": "lamps-wg/cms-ml-dsa",
      "baseRefName": "main",
      "baseRefOid": "e5f708e8b91b4eec996a6ca46e09e92e7a9516f7",
      "headRepository": "lamps-wg/cms-ml-dsa",
      "headRefName": "dvg/sized_asn1",
      "headRefOid": "e3a7c6b821ae1704b1c4f6320eba452358c23ddd",
      "closedAt": "2024-11-22T09:46:24Z",
      "mergedAt": "2024-11-22T09:46:24Z",
      "mergedBy": "danvangeest",
      "mergeCommit": {
        "oid": "75fd6c72552e8b0f261d626b670a6043808fb239"
      },
      "comments": [
        {
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "body": "In case you missed it, Russ suggested keeping a single type but adding a size range:\r\nhttps://mailarchive.ietf.org/arch/msg/spasm/2ptHLgPTksX7CNNNQr21pxO-zw8/\r\n\r\nLooks good if we're going for three separate public key types though.",
          "createdAt": "2024-11-21T17:59:33Z",
          "updatedAt": "2024-11-21T17:59:33Z"
        },
        {
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "body": "> In case you missed it, Russ suggested keeping a single type but adding a size range: https://mailarchive.ietf.org/arch/msg/spasm/2ptHLgPTksX7CNNNQr21pxO-zw8/\r\n> \r\n> Looks good if we're going for three separate public key types though.\r\n\r\nNever mind - I missed your message on the list about this! Looks like SIZE ( x | y | z ) is popular though.",
          "createdAt": "2024-11-21T20:23:46Z",
          "updatedAt": "2024-11-21T20:23:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDONFRYgM6SQ2Y-",
          "commit": {
            "abbreviatedOid": "e3a7c6b"
          },
          "author": "adam-r-ncsc",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-22T09:26:02Z",
          "updatedAt": "2024-11-22T09:26:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDONFRYgM6CtKQE",
      "title": "Security considerations and HSM streaming",
      "url": "https://github.com/lamps-wg/cms-ml-dsa/pull/14",
      "state": "MERGED",
      "author": "adam-r-ncsc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #11 ",
      "createdAt": "2024-11-21T17:53:04Z",
      "updatedAt": "2024-11-21T23:26:52Z",
      "baseRepository": "lamps-wg/cms-ml-dsa",
      "baseRefName": "main",
      "baseRefOid": "e5f708e8b91b4eec996a6ca46e09e92e7a9516f7",
      "headRepository": "lamps-wg/cms-ml-dsa",
      "headRefName": "ar/security_considerations",
      "headRefOid": "78bbd1bd10ac8b820eeb3447e478e10f322071eb",
      "closedAt": "2024-11-21T23:12:25Z",
      "mergedAt": "2024-11-21T23:12:25Z",
      "mergedBy": "danvangeest",
      "mergeCommit": {
        "oid": "3355bc94145f95bb522ac6b1234a305036a74293"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONFRYgM6SNZcp",
          "commit": {
            "abbreviatedOid": "78bbd1b"
          },
          "author": "danvangeest",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-21T23:11:48Z",
          "updatedAt": "2024-11-21T23:11:48Z",
          "comments": []
        }
      ]
    }
  ]
}